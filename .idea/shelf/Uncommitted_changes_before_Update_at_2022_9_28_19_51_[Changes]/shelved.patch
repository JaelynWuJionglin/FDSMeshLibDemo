Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'kotlin-android'\r\n    id 'kotlin-android-extensions'\r\n    id 'org.jetbrains.kotlin.android'\r\n}\r\n\r\nandroid {\r\n    compileSdk project.targetSdk\r\n\r\n    defaultConfig {\r\n        applicationId \"com.linkiing.FDSMeshLibDemo\"\r\n\r\n        minSdk project.minSdk\r\n        targetSdk project.targetSdk\r\n        versionCode project.versionCode\r\n        versionName project.versionName\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation 'androidx.core:core-ktx:1.7.0'\r\n    implementation 'androidx.appcompat:appcompat:1.4.1'\r\n    implementation 'com.google.android.material:material:1.6.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    //SDK需要#######################################################################################\r\n    //引入aar包\r\n    implementation fileTree(dir: 'libs', include: ['*.aar'])\r\n\r\n    //加密（SDK需要）\r\n    implementation 'com.madgag.spongycastle:core:1.58.0.0'\r\n    implementation 'com.madgag.spongycastle:prov:1.58.0.0'\r\n\r\n    //gson（SDK需要）\r\n    implementation 'com.google.code.gson:gson:2.9.0'\r\n    //END###########################################################################################\r\n\r\n//    implementation project(path: ':GodoxMeshLib')\r\n\r\n    //权限\r\n    implementation 'com.github.getActivity:XXPermissions:13.2'\r\n\r\n    //mmkv\r\n    implementation 'com.tencent:mmkv:1.2.14'\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 64b0804eb4e9c2846f87c8b90eb78a98fd61dc38)
+++ b/app/build.gradle	(date 1664361294534)
@@ -45,17 +45,17 @@
 
     //SDK需要#######################################################################################
     //引入aar包
-    implementation fileTree(dir: 'libs', include: ['*.aar'])
+//    implementation fileTree(dir: 'libs', include: ['*.aar'])
 
     //加密（SDK需要）
-    implementation 'com.madgag.spongycastle:core:1.58.0.0'
-    implementation 'com.madgag.spongycastle:prov:1.58.0.0'
+//    implementation 'com.madgag.spongycastle:core:1.58.0.0'
+//    implementation 'com.madgag.spongycastle:prov:1.58.0.0'
 
     //gson（SDK需要）
     implementation 'com.google.code.gson:gson:2.9.0'
     //END###########################################################################################
 
-//    implementation project(path: ':GodoxMeshLib')
+    implementation project(path: ':GodoxMeshLib')
 
     //权限
     implementation 'com.github.getActivity:XXPermissions:13.2'
Index: app/src/main/java/com/linkiing/fdsmeshlibdemo/ui/StudioActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.linkiing.fdsmeshlibdemo.ui\r\n\r\nimport android.os.Bundle\r\nimport android.widget.Toast\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.base.mesh.api.listener.NodeStatusChangeListener\r\nimport com.godox.sdk.api.FDSAddOrRemoveDeviceApi\r\nimport com.godox.sdk.api.FDSMeshApi\r\nimport com.godox.sdk.callbacks.FDSRemoveNodeCallBack\r\nimport com.godox.sdk.model.FDSNodeInfo\r\nimport com.linkiing.fdsmeshlibdemo.R\r\nimport com.linkiing.fdsmeshlibdemo.adapter.StudioDeviceAdapter\r\nimport com.linkiing.fdsmeshlibdemo.app.App\r\nimport com.linkiing.fdsmeshlibdemo.ui.base.BaseActivity\r\nimport com.linkiing.fdsmeshlibdemo.view.dialog.BottomMenuDialog\r\nimport com.linkiing.fdsmeshlibdemo.view.dialog.InputTextDialog\r\nimport com.linkiing.fdsmeshlibdemo.view.dialog.LoadingDialog\r\nimport com.telink.ble.mesh.util.LOGUtils\r\nimport kotlinx.android.synthetic.main.activity_studio.*\r\nimport kotlinx.android.synthetic.main.activity_studio.recyclerView_devices\r\n\r\nclass StudioActivity : BaseActivity(), NodeStatusChangeListener {\r\n    private lateinit var studioDeviceAdapter: StudioDeviceAdapter\r\n    private lateinit var bottomMenuDialog: BottomMenuDialog\r\n    private lateinit var loadingDialog: LoadingDialog\r\n    private lateinit var inputTextDialog: InputTextDialog\r\n    private val fdsAddOrRemoveDeviceApi = FDSAddOrRemoveDeviceApi(this)\r\n    private var fdsNodeInfo: FDSNodeInfo? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_studio)\r\n\r\n        initView()\r\n        initRecyclerView()\r\n        initListener()\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        App.getInstance().getMeshLogin().autoConnect()\r\n        studioDeviceAdapter.update()\r\n    }\r\n\r\n    private fun initView() {\r\n        loadingDialog = LoadingDialog(this)\r\n        bottomMenuDialog = BottomMenuDialog(this)\r\n\r\n        inputTextDialog = InputTextDialog(this)\r\n        inputTextDialog.setTitleText(\"重命名节点？\")\r\n    }\r\n\r\n    private fun initRecyclerView() {\r\n        studioDeviceAdapter = StudioDeviceAdapter()\r\n        val manager = LinearLayoutManager(this)\r\n        manager.orientation = LinearLayoutManager.VERTICAL\r\n        recyclerView_devices.layoutManager = manager\r\n        recyclerView_devices.adapter = studioDeviceAdapter\r\n\r\n        studioDeviceAdapter.setItemLongClickListener {\r\n            fdsNodeInfo = it\r\n            bottomMenuDialog.showDialog()\r\n        }\r\n    }\r\n\r\n    private fun initListener() {\r\n        FDSMeshApi.instance.addFDSNodeStatusChangeCallBack(this)\r\n\r\n        tv_add_dev.setOnClickListener {\r\n            goActivity(AddDeviceActivity::class.java, false)\r\n        }\r\n\r\n        inputTextDialog.setOnDialogListener {\r\n            if (fdsNodeInfo != null) {\r\n                /*\r\n                 * 重名了节点\r\n                 * type == \"\", 则不修改类型\r\n                 */\r\n                FDSMeshApi.instance.renameFDSNodeInfo(fdsNodeInfo!!,it,\"\")\r\n                studioDeviceAdapter.update()\r\n            }\r\n        }\r\n\r\n        bottomMenuDialog.setOnDialogListener {\r\n            when (it) {\r\n                BottomMenuDialog.MENU_DELETE -> {\r\n                    //从Mesh中删除设备\r\n                    if (fdsNodeInfo != null) {\r\n                        loadingDialog.showDialog()\r\n                        fdsAddOrRemoveDeviceApi.deviceRemoveNetWork(\r\n                            fdsNodeInfo!!,\r\n                            false,\r\n                            object : FDSRemoveNodeCallBack {\r\n\r\n                                /*\r\n                                 * 删除设备完成回调\r\n                                 * isAllSuccess 是否全部退网成功\r\n                                 * fdsNodes 未退网成功的节点列表\r\n                                 */\r\n                                override fun onComplete(isAllSuccess: Boolean,\r\n                                                        fdsNodes: MutableList<FDSNodeInfo>) {\r\n                                    LOGUtils.d(\"AddDeviceActivity isAllSuccess:$isAllSuccess size:${fdsNodes.size}\")\r\n                                    studioDeviceAdapter.update()\r\n                                    loadingDialog.dismissDialog()\r\n                                }\r\n                            })\r\n                    }\r\n                }\r\n                BottomMenuDialog.MENU_RENAME -> {\r\n                    if (fdsNodeInfo != null) {\r\n                        inputTextDialog.setDefText(fdsNodeInfo!!.name)\r\n                        inputTextDialog.showDialog()\r\n                    }\r\n                }\r\n                BottomMenuDialog.MENU_BLE_UPGRADE -> {\r\n                    Toast.makeText(this, \"功能开发中，敬请期待！\", Toast.LENGTH_SHORT).show()\r\n                }\r\n                BottomMenuDialog.MENU_MCU_UPGRADE -> {\r\n                    Toast.makeText(this, \"功能开发中，敬请期待！\", Toast.LENGTH_SHORT).show()\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onNodeStatusChange(meshAddress: Int) {\r\n        //节点在线状态改变\r\n        LOGUtils.d(\"StudioActivity =====================> onNodeStatusChange()\")\r\n        studioDeviceAdapter.update(meshAddress)\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        fdsAddOrRemoveDeviceApi.destroy()\r\n        FDSMeshApi.instance.removeFDSNodeStatusChangeCallBack(this)\r\n        App.getInstance().getMeshLogin().disconnect()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/linkiing/fdsmeshlibdemo/ui/StudioActivity.kt b/app/src/main/java/com/linkiing/fdsmeshlibdemo/ui/StudioActivity.kt
--- a/app/src/main/java/com/linkiing/fdsmeshlibdemo/ui/StudioActivity.kt	(revision 64b0804eb4e9c2846f87c8b90eb78a98fd61dc38)
+++ b/app/src/main/java/com/linkiing/fdsmeshlibdemo/ui/StudioActivity.kt	(date 1664365912846)
@@ -4,6 +4,7 @@
 import android.widget.Toast
 import androidx.recyclerview.widget.LinearLayoutManager
 import com.base.mesh.api.listener.NodeStatusChangeListener
+import com.base.mesh.api.main.MeshLogin
 import com.godox.sdk.api.FDSAddOrRemoveDeviceApi
 import com.godox.sdk.api.FDSMeshApi
 import com.godox.sdk.callbacks.FDSRemoveNodeCallBack
@@ -38,7 +39,7 @@
 
     override fun onResume() {
         super.onResume()
-        App.getInstance().getMeshLogin().autoConnect()
+        MeshLogin.instance.autoConnect()
         studioDeviceAdapter.update()
     }
 
@@ -132,6 +133,6 @@
         super.onDestroy()
         fdsAddOrRemoveDeviceApi.destroy()
         FDSMeshApi.instance.removeFDSNodeStatusChangeCallBack(this)
-        App.getInstance().getMeshLogin().disconnect()
+        MeshLogin.instance.disconnect()
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/linkiing/fdsmeshlibdemo/ui/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.linkiing.fdsmeshlibdemo.ui\r\n\r\nimport android.os.Bundle\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.hjq.permissions.OnPermissionCallback\r\nimport com.linkiing.fdsmeshlibdemo.R\r\nimport com.linkiing.fdsmeshlibdemo.adapter.StudioAdapter\r\nimport com.linkiing.fdsmeshlibdemo.adapter.StudioDeviceAdapter\r\nimport com.linkiing.fdsmeshlibdemo.app.App\r\nimport com.linkiing.fdsmeshlibdemo.ui.base.BaseActivity\r\nimport com.linkiing.fdsmeshlibdemo.utils.PermissionsUtils\r\nimport com.telink.ble.mesh.util.LOGUtils\r\nimport kotlinx.android.synthetic.main.activity_main.*\r\nimport kotlinx.android.synthetic.main.activity_studio.*\r\n\r\nclass MainActivity : BaseActivity() {\r\n    private lateinit var studioAdapter: StudioAdapter\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_main)\r\n\r\n        //初始化设备自动连接\r\n        App.getInstance().getMeshLogin().init()\r\n\r\n        initRecyclerView()\r\n    }\r\n\r\n    private fun initRecyclerView() {\r\n        studioAdapter = StudioAdapter()\r\n        val manager = LinearLayoutManager(this)\r\n        manager.orientation = LinearLayoutManager.VERTICAL\r\n        recyclerView_studio.layoutManager = manager\r\n        recyclerView_studio.adapter = studioAdapter\r\n\r\n        studioAdapter.setOnItemClickListener {\r\n            //权限请求\r\n            PermissionsUtils.blePermissions(this, object : OnPermissionCallback {\r\n                override fun onGranted(permissions: MutableList<String>?, all: Boolean) {\r\n                    //权限申请成功\r\n                    goActivity(StudioActivity::class.java, false)\r\n                }\r\n\r\n                override fun onDenied(permissions: MutableList<String>?, never: Boolean) {\r\n                    super.onDenied(permissions, never)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    override fun onDestroy() {\r\n        super.onDestroy()\r\n        LOGUtils.d(\"MainActivity onDestroy()\")\r\n\r\n        //销毁设备自动连接\r\n        App.getInstance().getMeshLogin().destroy()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/linkiing/fdsmeshlibdemo/ui/MainActivity.kt b/app/src/main/java/com/linkiing/fdsmeshlibdemo/ui/MainActivity.kt
--- a/app/src/main/java/com/linkiing/fdsmeshlibdemo/ui/MainActivity.kt	(revision 64b0804eb4e9c2846f87c8b90eb78a98fd61dc38)
+++ b/app/src/main/java/com/linkiing/fdsmeshlibdemo/ui/MainActivity.kt	(date 1664365912855)
@@ -20,9 +20,6 @@
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_main)
 
-        //初始化设备自动连接
-        App.getInstance().getMeshLogin().init()
-
         initRecyclerView()
     }
 
@@ -51,8 +48,5 @@
     override fun onDestroy() {
         super.onDestroy()
         LOGUtils.d("MainActivity onDestroy()")
-
-        //销毁设备自动连接
-        App.getInstance().getMeshLogin().destroy()
     }
 }
\ No newline at end of file
