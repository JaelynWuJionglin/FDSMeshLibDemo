plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

android {
    compileSdk project.targetSdk

    defaultConfig {
        applicationId "com.linkiing.FDSMeshLibDemo"

        minSdk project.minSdk
        targetSdk project.targetSdk
        versionCode project.versionCode
        versionName project.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file("ls_demo.jks")
            storePassword "ls123456"
            keyAlias "ls_demo_key"
            keyPassword "ls123456"
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            def curTime = new Date()
            def timeStr = curTime.format('yyyyMMddHHmmss')
            outputFileName = "FDSMeshDemo-v${variant.versionName}-${timeStr}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "androidx.core:core-ktx:${project.kotlin_version}"
    implementation "androidx.appcompat:appcompat:${project.appcompat_version}"
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //SDK需要#######################################################################################
    //引入aar包
    implementation fileTree(dir: 'libs', include: ['*.aar'])

    //加密（SDK需要）
    implementation 'com.madgag.spongycastle:core:1.58.0.0'
    implementation 'com.madgag.spongycastle:prov:1.58.0.0'

    //gson（SDK需要）
    implementation "com.google.code.gson:gson:${project.gson_version}"
    //END###########################################################################################

//    implementation project(path: ':GodoxAgmLib')
//    implementation project(path: ':GodoxMeshLib')
//    implementation project(path: ':LsTiBleMeshLib')

    //权限
    implementation 'com.github.getActivity:XXPermissions:13.2'

    //mmkv
    implementation 'com.tencent:mmkv:1.2.14'

    //文件选择器
    implementation 'com.leon:lfilepickerlibrary:1.8.0'
}